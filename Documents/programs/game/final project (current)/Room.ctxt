#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\ modified\ by\ Rodrigo\ A.\ Obando\ (2018)\r\n\ @version\ 1.0\ (February\ 2002)\r\n
comment1.params=name\ description
comment1.target=Room(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\ no\ exits.\r\n\ "description"\ is\ something\ like\ "in\ a\ kitchen"\ or\ "in\ an\ open\ court\ \r\n\ yard".\r\n
comment10.params=
comment10.target=java.util.HashMap\ getTrader()
comment11.params=name\ enemy
comment11.target=void\ addEnemy(java.lang.String,\ organism)
comment12.params=name\ npc
comment12.target=void\ addNpc(java.lang.String,\ npcs)
comment13.params=
comment13.target=java.util.HashMap\ getEnemy()
comment14.params=
comment14.target=java.util.HashMap\ getNpc()
comment15.params=
comment15.target=java.util.HashMap\ getItems()
comment16.params=name
comment16.target=void\ removeTrader(java.lang.String)
comment17.params=name\ item
comment17.target=void\ setItems(java.lang.String,\ Items)
comment18.params=namee\ weaponn
comment18.target=void\ setWeapons(java.lang.String,\ orgWeapon)
comment19.params=
comment19.target=java.util.HashMap\ getWeapons()
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n
comment20.params=direction
comment20.target=Room\ getExit(java.lang.String)
comment20.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n
comment21.params=
comment21.target=java.util.HashMap\ getExits()
comment22.params=
comment22.target=boolean\ hasEnemy()
comment23.params=
comment23.target=boolean\ hasTrader()
comment24.params=
comment24.target=boolean\ hasNpc()
comment25.params=
comment25.target=boolean\ hasWeapon()
comment26.params=
comment26.target=boolean\ hasItems()
comment27.params=
comment27.target=boolean\ lockCheck()
comment3.params=
comment3.target=java.lang.String\ getName()
comment4.params=
comment4.target=java.lang.String\ getShortDescription()
comment4.text=\r\n\ Return\ the\ description\ of\ the\ room\ (the\ one\ that\ was\ defined\ in\ the\r\n\ constructor).\r\n
comment5.params=name
comment5.target=java.lang.String\ getLongDescription(java.lang.String)
comment5.text=\r\n\ Return\ a\ long\ description\ of\ this\ room,\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n
comment7.params=
comment7.target=void\ lock()
comment8.params=
comment8.target=void\ unlock()
comment9.params=name\ trader
comment9.target=void\ setTrader(java.lang.String,\ Trader)
numComments=28
